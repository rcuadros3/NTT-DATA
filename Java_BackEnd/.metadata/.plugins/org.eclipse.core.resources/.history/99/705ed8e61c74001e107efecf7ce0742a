package com.nttdata.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/cliente")
public class ClienteController {

	@GetMapping("/informacion")
	public ResponseEntity<?> obtenerInformacionCliente(
			@RequestParam String tipoDocumento,
			@RequestParam String numeroDocumento) {
		try {
			if (!("C".equals(tipoDocumento) || "P".equals(tipoDocumento))) {
				// return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
				return ResponseEntity.badRequest().body("Tipo de documento no válido.");
			}
			int ndocumento = Integer.parseInt(numeroDocumento);
			if (ndocumento != 23445322 || !"C".equals(tipoDocumento)) {
				// return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
				return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Cliente no encontrado");
			}
			// Mockear datos del cliente
			Cliente cliente = new Cliente();
			cliente.setPrimerNombre("Ronald");
			cliente.setSegundoNombre("Alexis");
			cliente.setPrimerApellido("Cuadros");
			cliente.setSegundoApellido("Benavides");
			cliente.setTelefono("316 710 0756");
			cliente.setDireccion("123 Calle Principal");
			cliente.setCiudadResidencia("Piedecuesta");

			return ResponseEntity.ok(cliente);
		} catch (Exception e) {
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
					.body("Ocurrió un error interno en el servidor. " + e);
		}

	}
}
